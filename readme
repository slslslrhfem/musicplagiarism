Nhelv의 경우 bpm이 174.59인데.. 기존의 서비스 되고 있는 여러 경우에도 bpm은 소수가 아닐 것을 가정하고 있어서 일단은 outliar정도에 해당됩니다. 제 코드의 경우도 175로 계산하여 사용합니다.
원래는 Nhelv가 곡이 이정도로 복잡해도 잘 구합니다.. 느낌으로 쓰려 했는데, 예상치 못한 변수가 있었네요 ㅋㅋ..
만약 bpm을 소숫점 자리까지 구하게 될 경우 상당히 안 맞습니다. 128bpm인 제 음악 샘플도 128.09bpm으로 구해진 것을 억지로 반올림하여 사용하는 경우입니다.

3박자 곡인 IU의 비밀도 나름 잘 잡는 것 같습니다. 물론 3박자임을 인식하고 잡는 느낌은 아니긴 합니다. 우선은 저번에 보여드렸던 https://www.mazmazika.com/chordanalyzer 이 사이트의 Cutting정도는 되는 것 같습니다.

Todd,guy arthur의 closer같은 경우 200bpm(라고 주장하는)인 곡인데 100bpm으로 잡긴 합니다. 근데 큰 이슈는 아닐 것 같습니다

roughsketch의 666의 경우 bpm이 666인데, 111로 추측해버려서 꽤나 꼬입니다. bpm을 167.5로 추측하는 편이 여러모로 낫긴할텐데, 다른 모델을 활용했을때는 또 IU의 비밀에서 꽤나 이상한 수치가 나오기도 해서 우선은 놔두었습니다. mazmazika에서는 또 이 곡에 대해서 167로 나름 잘 예측하는 것 같아서, 더 나은 Module을 사용하는 것일 수도 있겠구나 싶긴 했습니다.
